steps:
- name: 'gcr.io/cloud-builders/git'
  id: clone-dcm4che
  args:
  - clone
  - https://github.com/dcm4che/dcm4che.git
  - dcm4che

- name: 'gcr.io/cloud-builders/git'
  id: checkout-dcm4che-tag
  args:
  - checkout
  - "tags/5.15.1"
  dir: dcm4che

- name: ${_MAVEN_IMAGE}
  id: build-tools
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - bash
  - integration_test/scripts/mvn-install-tools.sh

- name: ${_MAVEN_IMAGE}
  id: store-scp
  args:
  - bash
  - integration_test/scripts/run-store-scp-and-wait.sh
  - ${_STORE_SCP_RUN_STEP}
  - ${_STORE_SCP_PORT}
  - ${_CLOSE_STORE_SCP_PORT}

- name: ${_GRADLE_IMAGE}
  id: adapter-build
  args: [ 'bash', './integration_test/scripts/build-adapters.sh', '${_IMAGEPROJECT}', '${SHORT_SHA}']
  waitFor: ['-']

# run adapter

- name: 'gcr.io/${_IMAGEPROJECT}/healthcare-api-dicom-dicomweb-adapter-import:${SHORT_SHA}'
  id: adapter-main
  entrypoint: 'bash'
  args: [ '-c',
          "java -Dorg.dcm4che3.imageio.codec.ImageReaderFactory=com/google/cloud/healthcare/imaging/dicomadapter/transcoder/ImageReaderFactory.properties \
                -Dorg.dcm4che3.imageio.codec.ImageWriterFactory=com/google/cloud/healthcare/imaging/dicomadapter/transcoder/ImageWriterFactory.properties \
                -cp /app/resources:/app/classes:/app/libs/* com.google.cloud.healthcare.imaging.dicomadapter.ImportAdapter \
          --dimse_aet=IMPORTADAPTER \
          --dimse_port=${_ADAPTER_PORT} \
          --dicomweb_address=https://healthcare.googleapis.com/${_VERSION}/projects/${_PROJECT}/locations/${_LOCATION}/datasets/${_DATASET}/dicomStores/${_STORE_NAME}/dicomWeb \
          --monitoring_project_id=${_PROJECT} \
          --aet_dictionary_inline=\"[{\\\"name\\\":\\\"STORESCP\\\",\\\"host\\\":${_STORE_SCP_RUN_STEP},\\\"port\\\":${_STORE_SCP_PORT}},{\\\"name\\\":\\\"STGCMTSCU\\\",\\\"host\\\":${_COMMITMENT_SCU_STEP},\\\"port\\\":${_COMMITMENT_SCU_PORT}},]\" \
          --destination_config_inline=\"[{\\\"filter\\\":\\\"Modality=MG\\\",\\\"dicomweb_destination\\\":\\\"https://healthcare.googleapis.com/${_VERSION}/projects/${_PROJECT}/locations/${_LOCATION}/datasets/${_DATASET}/dicomStores/${_STORE_NAME}-destination-2/dicomWeb\\\"}]\" \
          --redact_remove_list=ContentTime,ContentDate \
          --store_compress_to_transfer_syntax=1.2.840.10008.1.2.4.90 \
          --verbose & trap \"exit 0\" SIGTERM; while true; do sleep 1; done"]
  waitFor: ['adapter-build']

# run adapter with http2

- name: 'gcr.io/${_IMAGEPROJECT}/healthcare-api-dicom-dicomweb-adapter-import:${SHORT_SHA}'
  id: adapter-http2
  entrypoint: 'bash'
  args: [ '-c',
          "java -Dorg.dcm4che3.imageio.codec.ImageReaderFactory=com/google/cloud/healthcare/imaging/dicomadapter/transcoder/ImageReaderFactory.properties \
                -Dorg.dcm4che3.imageio.codec.ImageWriterFactory=com/google/cloud/healthcare/imaging/dicomadapter/transcoder/ImageWriterFactory.properties \
                -cp /app/resources:/app/classes:/app/libs/* com.google.cloud.healthcare.imaging.dicomadapter.ImportAdapter \
          --dimse_aet=IMPORTADAPTER \
          --dimse_port=${_ADAPTER_PORT_HTTP2} \
          --stow_http2 false \
          --dicomweb_address=https://healthcare.googleapis.com/${_VERSION}/projects/${_PROJECT}/locations/${_LOCATION}/datasets/${_DATASET}/dicomStores/${_STORE_NAME}/dicomWeb \
          --verbose & trap \"exit 0\" SIGTERM; while true; do sleep 1; done"]
  waitFor: ['adapter-build']

# run adapter with local backup

- name: 'gcr.io/${_IMAGEPROJECT}/healthcare-api-dicom-dicomweb-adapter-import:${SHORT_SHA}'
  id: adapter-with-local-backup
  entrypoint: 'bash'
  args: [ '-c',
          "java -Dorg.dcm4che3.imageio.codec.ImageReaderFactory=com/google/cloud/healthcare/imaging/dicomadapter/transcoder/ImageReaderFactory.properties \
            -Dorg.dcm4che3.imageio.codec.ImageWriterFactory=com/google/cloud/healthcare/imaging/dicomadapter/transcoder/ImageWriterFactory.properties \
            -cp /app/resources:/app/classes:/app/libs/* com.google.cloud.healthcare.imaging.dicomadapter.ImportAdapter \
      --dimse_aet=IMPORTADAPTER \
      --dimse_port=${_ADAPTER_PORT_WITH_LOCAL_BACKUP} \
      --dicomweb_address=https://healthcare.googleapis.com/${_VERSION}/projects/${_PROJECT}/locations/${_LOCATION}/datasets/${_DATASET}/dicomStores/${_STORE_NAME}/dicomWeb \
      --persistent_file_storage_location=tmp/backupfile \
      --persistent_file_upload_retry_amount=5 \
      --verbose & trap \"exit 0\" SIGTERM; while true; do sleep 1; done"]
  waitFor: ['adapter-build']

# run adapter with gcs backup

- name: 'gcr.io/${_IMAGEPROJECT}/healthcare-api-dicom-dicomweb-adapter-import:${SHORT_SHA}'
  id: adapter-with-gcs-backup
  entrypoint: 'bash'
  args: [ '-c',
          "java -Dorg.dcm4che3.imageio.codec.ImageReaderFactory=com/google/cloud/healthcare/imaging/dicomadapter/transcoder/ImageReaderFactory.properties \
            -Dorg.dcm4che3.imageio.codec.ImageWriterFactory=com/google/cloud/healthcare/imaging/dicomadapter/transcoder/ImageWriterFactory.properties \
            -cp /app/resources:/app/classes:/app/libs/* com.google.cloud.healthcare.imaging.dicomadapter.ImportAdapter \
      --dimse_aet=IMPORTADAPTER \
      --dimse_port=${_ADAPTER_PORT_WITH_GCS_BACKUP} \
      --dicomweb_address=https://healthcare.googleapis.com/${_VERSION}/projects/${_PROJECT}/locations/${_LOCATION}/datasets/${_DATASET}/dicomStores/${_STORE_NAME}/dicomWeb \
      --persistent_file_storage_location=gs://${_BUCKET}/backup \
      --oauth_scopes=https://www.googleapis.com/auth/cloud-platform \
      --gcs_backup_project_id=${_PROJECT} \
      --persistent_file_upload_retry_amount=2 \
      --verbose & trap \"exit 0\" SIGTERM; while true; do sleep 1; done"]
  waitFor: ['adapter-build']

# create dataset if not exists, re-create store (delete if exists, then create)
- name: ${_CLOUD_SDK_IMAGE}
  id: setup-dataset-and-dicom-store
  args:
  - bash
  - integration_test/scripts/setup-dataset-and-store.sh
  - ${_PROJECT}
  - ${_LOCATION}
  - ${_DATASET}
  - ${_STORE_NAME}
  waitFor: ['-']

# busybox is a compact utility image
- name: 'busybox:latest'
  id: wait-for-adapter
  args:
  - ash
  - integration_test/scripts/wait-for-port.sh
  - ${_ADAPTER_RUN_STEP}
  - ${_ADAPTER_PORT}
  timeout: 300s
  waitFor:
  - build-tools
  - adapter-build
  - setup-dataset-and-dicom-store

# busybox is a compact utility image
- name: 'busybox:latest'
  id: wait-for-adapter-http2
  args:
  - ash
  - integration_test/scripts/wait-for-port.sh
  - ${_ADAPTER_RUN_STEP_HTTP2}
  - ${_ADAPTER_PORT_HTTP2}
  timeout: 300s
  waitFor:
  - build-tools
  - adapter-build
  - setup-dataset-and-dicom-store

# busybox is a compact utility image
- name: 'busybox:latest'
  id: wait-for-adapter-with-local-backup
  args:
  - ash
  - integration_test/scripts/wait-for-port.sh
  - ${_ADAPTER_RUN_STEP_WITH_LOCAL_BACKUP}
  - ${_ADAPTER_PORT_WITH_LOCAL_BACKUP}
  timeout: 300s
  waitFor:
  - build-tools
  - adapter-build
  - setup-dataset-and-dicom-store

  # busybox is a compact utility image
- name: 'busybox:latest'
  id: wait-for-adapter-with-gcs-backup
  args:
  - ash
  - integration_test/scripts/wait-for-port.sh
  - ${_ADAPTER_RUN_STEP_WITH_GCS_BACKUP}
  - ${_ADAPTER_PORT_WITH_GCS_BACKUP}
  timeout: 300s
  waitFor:
  - build-tools
  - adapter-build
  - setup-dataset-and-dicom-store

- name: 'busybox:latest'
  id: wait-for-storescp
  args:
  - ash
  - integration_test/scripts/wait-for-port.sh
  - ${_STORE_SCP_RUN_STEP}
  - ${_STORE_SCP_PORT}
  timeout: 300s
  waitFor:
  - build-tools

- name: ${_MAVEN_IMAGE}
  id: run-store-scu
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.storescu.StoreSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP}:${_ADAPTER_PORT} ../../../integration_test/data/example.dcm'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-storescu"
  waitFor:
  - wait-for-adapter

- name: ${_MAVEN_IMAGE}
  id: run-store-scu-http2
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.storescu.StoreSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP_HTTP2}:${_ADAPTER_PORT_HTTP2} ../../../integration_test/data/example.dcm'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-storescu"
  waitFor:
  - wait-for-adapter-http2

- name: ${_MAVEN_IMAGE}
  id: run-store-scu-with-local-backup
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.storescu.StoreSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP_WITH_LOCAL_BACKUP}:${_ADAPTER_PORT_WITH_LOCAL_BACKUP} ../../../integration_test/data/example2.dcm'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-storescu"
  waitFor:
  - wait-for-adapter-with-local-backup

- name: ${_MAVEN_IMAGE}
  id: run-store-scu-with-gcs-backup
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.storescu.StoreSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP_WITH_GCS_BACKUP}:${_ADAPTER_PORT_WITH_GCS_BACKUP} ../../../integration_test/data/example3.dcm'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-storescu"
  waitFor:
  - wait-for-adapter-with-gcs-backup

- name: ${_MAVEN_IMAGE}
  id: run-store-scu-destination-2
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.storescu.StoreSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP}:${_ADAPTER_PORT} ../../../integration_test/data/example-mg.dcm'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-storescu"
  waitFor:
  - wait-for-adapter

- name: ${_MAVEN_IMAGE}
  id: run-find-scu-instance
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.findscu.FindSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP}:${_ADAPTER_PORT} -L IMAGE -X --out-cat --out-file findscu-instance-result.xml --out-dir ../../../integration_test/'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-findscu"
  waitFor:
  - run-store-scu
  - run-store-scu-http2
  - run-store-scu-with-local-backup
  - run-store-scu-with-gcs-backup
  - run-store-scu-destination-2

- name: ${_MAVEN_IMAGE}
  id: run-find-scu-series
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.findscu.FindSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP}:${_ADAPTER_PORT} -L SERIES -X --out-cat --out-file findscu-series-result.xml --out-dir ../../../integration_test/'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-findscu"
  waitFor:
  - run-store-scu
  - run-store-scu-http2
  - run-store-scu-with-local-backup
  - run-store-scu-with-gcs-backup
  - run-store-scu-destination-2

- name: ${_MAVEN_IMAGE}
  id: run-find-scu-study
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.findscu.FindSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP}:${_ADAPTER_PORT} -L STUDY -X --out-cat --out-file findscu-study-result.xml --out-dir ../../../integration_test/'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-findscu"
  waitFor:
  - run-store-scu
  - run-store-scu-http2
  - run-store-scu-with-local-backup
  - run-store-scu-with-gcs-backup
  - run-store-scu-destination-2

- name: ${_MAVEN_IMAGE}
  id: run-move-scu
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.movescu.MoveSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP}:${_ADAPTER_PORT} -m SOPInstanceUID=${_REPLACED_UID} --dest STORESCP'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-movescu"
  waitFor:
  - run-store-scu
  - wait-for-storescp

# Stgcmtscu  waits for n-event-report after n-action request returns success,
# if it doesn't get one within cloud build step timeout of 30 seconds, step fails.
# Run it after other tools to avoid timeout due to parallel execution.
- name: ${_MAVEN_IMAGE}
  id: run-commitment-scu
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - mvn
  - '-ntp'
  - 'exec:java'
  - '-Dexec.mainClass=org.dcm4che3.tool.stgcmtscu.StgCmtSCU'
  - '-Dexec.args=-c IMPORTADAPTER@${_ADAPTER_RUN_STEP}:${_ADAPTER_PORT} -b STGCMTSCU:${_COMMITMENT_SCU_PORT} --explicit-vr --directory /workspace/integration_test/commitment_result /workspace/integration_test/data/example-redacted-jp2k.dcm'
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-stgcmtscu"
  waitFor:
  - run-store-scu
  - run-store-scu-destination-2
  - run-store-scu-with-local-backup
  - run-store-scu-with-gcs-backup
  - run-find-scu-instance
  - run-find-scu-series
  - run-find-scu-study
  - run-move-scu
  timeout: 30s

- name: 'gcr.io/cloud-builders/docker'
  id:  close-adapter
  entrypoint: bash
  args:
      - './integration_test/scripts/stop-image.sh'
      - '${_IMAGEPROJECT}'
      - '${SHORT_SHA}'
  waitFor:
  - run-store-scu
  - run-store-scu-destination-2
  - run-store-scu-with-local-backup
  - run-store-scu-with-gcs-backup
  - run-find-scu-instance
  - run-find-scu-series
  - run-find-scu-study
  - run-move-scu
  - run-commitment-scu

- name: 'busybox:latest'
  id: close-store-scp
  args:
  - nc
  - '-z'
  - ${_STORE_SCP_RUN_STEP}
  - ${_CLOSE_STORE_SCP_PORT}
  waitFor:
  - run-move-scu

- name: ${_CLOUD_SDK_IMAGE}
  id: check-store-curl
  args:
  - bash
  - integration_test/scripts/curl-dcm.sh
  - "https://healthcare.googleapis.com/${_VERSION}/projects/${_PROJECT}/locations/${_LOCATION}/datasets/${_DATASET}/dicomStores/${_STORE_NAME}/dicomWeb/studies/${_REPLACED_UID}/series/${_REPLACED_UID}/instances/${_REPLACED_UID}"
  - integration_test/downloaded.dcm
  waitFor:
  - run-store-scu

- name: ${_CLOUD_SDK_IMAGE}
  id: check-store-curl-with-local-backup
  args:
    - bash
    - integration_test/scripts/curl-dcm.sh
    - "https://healthcare.googleapis.com/${_VERSION}/projects/${_PROJECT}/locations/${_LOCATION}/datasets/${_DATASET}/dicomStores/${_STORE_NAME}/dicomWeb/studies/${_REPLACED_UID_2}/series/${_REPLACED_UID_2}/instances/${_REPLACED_UID_2}"
    - integration_test/downloaded2.dcm
  waitFor:
    - run-store-scu-with-local-backup

- name: ${_CLOUD_SDK_IMAGE}
  id: check-store-curl-with-gcs-backup
  args:
    - bash
    - integration_test/scripts/curl-dcm.sh
    - "https://healthcare.googleapis.com/${_VERSION}/projects/${_PROJECT}/locations/${_LOCATION}/datasets/${_DATASET}/dicomStores/${_STORE_NAME}/dicomWeb/studies/${_REPLACED_UID_3}/series/${_REPLACED_UID_3}/instances/${_REPLACED_UID_3}"
    - integration_test/downloaded3.dcm
  waitFor:
    - run-store-scu-with-gcs-backup

# example-redacted has replaced UIDs and removed ContentTime,ContentDate tags
- name: 'busybox:latest'
  id: check-store-diff
  args:
  - diff
  - 'integration_test/downloaded.dcm'
  - 'integration_test/data/example-redacted-jp2k.dcm'
  waitFor:
  - check-store-curl

- name: ${_CLOUD_SDK_IMAGE}
  id: check-store-curl-destination-2
  args:
  - bash
  - integration_test/scripts/curl-dcm.sh
  - "https://healthcare.googleapis.com/${_VERSION}/projects/${_PROJECT}/locations/${_LOCATION}/datasets/${_DATASET}/dicomStores/${_STORE_NAME}-destination-2/dicomWeb/studies/${_REPLACED_UID}/series/${_REPLACED_UID}/instances/${_REPLACED_UID}"
  - integration_test/downloaded-destination-2.dcm
  waitFor:
  - run-store-scu-destination-2

# example-redacted has replaced UIDs and removed ContentTime,ContentDate tags
- name: 'busybox:latest'
  id: check-store-diff-destination-2
  args:
  - diff
  - 'integration_test/downloaded-destination-2.dcm'
  - 'integration_test/data/example-redacted-mg-jp2k.dcm'
  waitFor:
  - check-store-curl-destination-2

- name: 'busybox:latest'
  id: check-store-diff-with-local-backup
  args:
    - diff
    - 'integration_test/downloaded2.dcm'
    - 'integration_test/data/example2.dcm'
  waitFor:
    - check-store-curl-with-local-backup

- name: 'busybox:latest'
  id: check-store-diff-with-gcs-backup
  args:
    - diff
    - 'integration_test/downloaded3.dcm'
    - 'integration_test/data/example3.dcm'
  waitFor:
    - check-store-curl-with-gcs-backup

- name: 'busybox:latest'
  id: check-find-diff-instance
  args:
  - diff
  - 'integration_test/findscu-instance-result1.xml'
  - 'integration_test/data/findscu-instance-expected.xml'
  waitFor:
  - run-find-scu-instance

- name: 'busybox:latest'
  id: check-find-diff-series
  args:
  - diff
  - 'integration_test/findscu-series-result1.xml'
  - 'integration_test/data/findscu-series-expected.xml'
  waitFor:
  - run-find-scu-series

- name: 'busybox:latest'
  id: check-find-diff-study
  args:
  - diff
  - 'integration_test/findscu-study-result1.xml'
  - 'integration_test/data/findscu-study-expected.xml'
  waitFor:
  - run-find-scu-study

# storescp adds 1 extra tag
# (0002,0016) [AE] SourceApplicationEntityTitle: IMPORTADAPTER
- name: 'busybox:latest'
  id: check-move-diff
  args:
  - diff
  - 'integration_test/storescp-data/${_REPLACED_UID}'
  - 'integration_test/data/example-redacted-moved-jp2k.dcm'
  waitFor:
  - run-move-scu

- name: ${_MAVEN_IMAGE}
  id: check-commitment-diff
  volumes:
  - name: 'vol1'
    path: '/root/.m2'
  args:
  - bash
  - /workspace/integration_test/scripts/diff-commitment-result.sh
  dir: "dcm4che/dcm4che-tool/dcm4che-tool-dcm2xml"
  waitFor:
  - run-commitment-scu

- name: ${_CLOUD_SDK_IMAGE}
  id: delete-dicom-store
  args:
  - gcloud
  - beta
  - healthcare
  - dicom-stores
  - delete
  - ${_STORE_NAME}
  - "--project=${_PROJECT}"
  - "--dataset=${_DATASET}"
  - "--location=${_LOCATION}"
  - "--quiet"
  waitFor:
  - check-store-curl
  - check-store-curl-destination-2
  - check-store-curl-with-local-backup
  - check-store-curl-with-gcs-backup
  - run-find-scu-instance
  - run-find-scu-series
  - run-find-scu-study
  - run-move-scu
  - run-commitment-scu

- name: ${_CLOUD_SDK_IMAGE}
  id: delete-dicom-store-destination-2
  args:
  - gcloud
  - beta
  - healthcare
  - dicom-stores
  - delete
  - "${_STORE_NAME}-destination-2"
  - "--project=${_PROJECT}"
  - "--dataset=${_DATASET}"
  - "--location=${_LOCATION}"
  - "--quiet"
  waitFor:
  - delete-dicom-store

- name: ${_CLOUD_SDK_IMAGE}
  id: publish-image
  args: [ 'bash', 'integration_test/scripts/publish-images.sh', '${_IMAGEPROJECT}', "${_PUBLISH}", "${REPO_NAME}" , "${_ACCESS_TOKEN_BASE64}", "${PROJECT_ID}", "${_KMS_LOCATION}", "${_KMS_KEYRING}", "${_KMS_KEY}" ]
  waitFor: ['delete-dicom-store-destination-2']

timeout: 1800s
substitutions:
  _VERSION: v1
  _PROJECT: gcp-healthcare-oss-test
  _IMAGEPROJECT: cloud-healthcare-containers
  _LOCATION: us-central1
  _DATASET: healthcare-dicom-dicomweb-adapter-test
  _STORE_NAME: integration-test-store
  _BUCKET: dicomweb-import-adapter-integration-test
  _ADAPTER_PORT: '2575'
  _STORE_SCP_PORT: '2576'
  _ADAPTER_PORT_HTTP2: '2577'
  _CLOSE_STORE_SCP_PORT: '3001'
  _COMMITMENT_SCU_PORT: '4000'
  _ADAPTER_PORT_WITH_LOCAL_BACKUP: '2585'
  _ADAPTER_PORT_WITH_GCS_BACKUP: '2586'
  _KMS_LOCATION: global
  _KMS_KEYRING: default
  _KMS_KEY: github-robot-access-token
  _ACCESS_TOKEN_BASE64: CiQAM/SK3FUc1t+CnHDdgRzbc556FIyHddxRpsnolmSKfpiZ66sSUQDrEGO9gz15JIulryNagWzUOGbBEAaC04y85J8fNRjJZ8T8ntzh6Kt0Sa+GCG+3n5xSQdDJdj6xOG0LfVzvU+/K3mZ1KJlIcd0jiCeBrjYLlw==
# Cloud build names containers that run steps: step_0, step_1 etc. These are also their dns names on docker network.
# Update to correct value if adding/removing steps before adapter run.
  _ADAPTER_RUN_STEP: 'step_5'
  _ADAPTER_RUN_STEP_HTTP2: 'step_6'
  _ADAPTER_RUN_STEP_WITH_LOCAL_BACKUP: 'step_7'
  _ADAPTER_RUN_STEP_WITH_GCS_BACKUP: 'step_8'
  _STORE_SCP_RUN_STEP: 'step_3'
  _COMMITMENT_SCU_STEP: 'step_24'
# Deid redactor replaces Instance/Series/Study UIDs with pseudo-random value seeded from original.
# This value corresponds to '111'. UID replacement behavior is not configurable in redactor.
  _REPLACED_UID: '2.25.140302709094137852884202099990798014056'
  _REPLACED_UID_2: '2.25.140302709094137852884202099990798014222'
  _REPLACED_UID_3: '2.25.140302709094137852884202099990798014333'
  _GRADLE_IMAGE: 'gradle:5.6-jdk11'
  _MAVEN_IMAGE: 'maven:3.6-jdk-11'
  _CLOUD_SDK_IMAGE: 'google/cloud-sdk:290.0.0'
  _PUBLISH: 'false'

